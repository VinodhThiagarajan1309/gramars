package <c:get select="$component/@serializationPkg" />;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Map;

import org.apache.kafka.common.serialization.Deserializer;
import org.apache.kafka.common.serialization.Serializer;

<c:if test="$type/@typeImport">
import <c:get select="$type/@typeImport" />;
</c:if>

public class <c:get select="$type/@coderJava" /> implements Serializer<<c:get select="$type/@name" />>, Deserializer<<c:get select="$type/@name" />> {

	public <c:get select="$type/@coderJava" />() {
		
	}

	public byte[] serialize(String topic, <c:get select="$type/@name" /> obj) {
		try {
			ByteArrayOutputStream baos = new ByteArrayOutputStream();
			ObjectOutputStream oos = new ObjectOutputStream(baos);
			oos.writeObject(obj);
			oos.close();
			byte[] b = baos.toByteArray();
			return b;
		} catch (IOException e) {
			return new byte[0];
		}
	}

	@Override
	public <c:get select="$type/@name" /> deserialize(String topic, byte[] b) {
		try {
			return (<c:get select="$type/@name" />) new ObjectInputStream(new ByteArrayInputStream(b)).readObject();
		} catch (Exception e) {
			return null;
		}
	}

	@Override
	public void close() {
		
	}

	@Override
	public void configure(Map arg0, boolean arg1) {
		
	}

}

