<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags" %>

    <c:setVariable select="/*" var="root" />

*******************************



*** Begin custom model updates for root (3)

<c:loadContent var="others">

<others>
	<other kind="Kafka"  style="shape=box, fillcolor=grey86" lineStyle="penwidth=3, style=dashed, color=grey14" />
	<other kind="HDFS"   style="shape=box, fillcolor=aquamarine3" lineStyle="penwidth=3, style=dashed, color=aquamarine4" />
</others>

</c:loadContent>

<c:setVariable select="$others/others" var="others" />


*** End custom model updates for root (3)

<c:iterate select="$root/topology" var="topology">
    <c:set select="$topology" name="artifactIdPrefix"><c:get select="translate(c:lower-case($topology/@label),' ','-')" /></c:set>
    <c:set select="$topology" name="name"><c:get select="c:camelCase($topology/@label)" /></c:set>
    <c:if test="not($topology/@allProject)" >
	    <c:set select="$topology" name="allProject"><c:get select="$topology/@artifactIdPrefix" /></c:set>
	</c:if>
    <c:if test="not($topology/@stormProject)" >
	    <c:set select="$topology" name="stormProject"><c:get select="$topology/@artifactIdPrefix" />-storm</c:set>
	</c:if>
    <c:set select="$topology" name="utilPkg"><c:get select="$topology/@basePackage" />.util</c:set>
    <c:set select="$topology" name="utilDir"><c:get select="translate($topology/@utilPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="mockPkg"><c:get select="$topology/@basePackage" />.mock</c:set>
    <c:set select="$topology" name="mockDir"><c:get select="translate($topology/@mockPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="spoutPkg"><c:get select="$topology/@basePackage" />.spout</c:set>
    <c:set select="$topology" name="spoutDir"><c:get select="translate($topology/@spoutPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="topologyPkg"><c:get select="$topology/@basePackage" />.topology</c:set>
    <c:set select="$topology" name="topologyDir"><c:get select="translate($topology/@topologyPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="logicPkg"><c:get select="$topology/@basePackage" />.logic</c:set>
    <c:set select="$topology" name="logicDir"><c:get select="translate($topology/@logicPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="beanPkg"><c:get select="$topology/@basePackage" />.bean</c:set>
    <c:set select="$topology" name="beanDir"><c:get select="translate($topology/@beanPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="boltPkg"><c:get select="$topology/@basePackage" />.bolt</c:set>
    <c:set select="$topology" name="boltDir"><c:get select="translate($topology/@boltPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="exceptionPkg"><c:get select="$topology/@basePackage" />.exception</c:set>
    <c:set select="$topology" name="exceptionDir"><c:get select="translate($topology/@exceptionPkg,'.','/')" /></c:set>
    <c:set select="$topology" name="topologyJava"><c:get select="$topology/@name" />Topology</c:set>
    <c:set select="$topology" name="iLoggerJava">I<c:get select="$topology/@name" />Logger</c:set>
    <c:set select="$topology" name="loggerJava"><c:get select="$topology/@name" />Logger</c:set>
    <c:set select="$topology" name="taskHookJava">TaskHook</c:set>
    <c:set select="$topology" name="monitorProject"><c:get select="$topology/@artifactIdPrefix" />-monitor</c:set>

    *** Begin custom model updates for topology (4)

	<c:if test="not($topology/@title)" >
	    <c:set select="$topology" name="title"><c:get select="$topology/@label" /></c:set>
	</c:if>

    *** End custom model updates for topology (4)


    <c:iterate select="$topology/bolt" var="bolt">
        <c:set select="$bolt" name="name"><c:get select="c:camelCase($bolt/@label)" /></c:set>
        <c:set select="$bolt" name="boltTestJava"><c:get select="$bolt/@name" />BoltTest</c:set>
        <c:set select="$bolt" name="boltLogicJava"><c:get select="$bolt/@name" />BoltLogic</c:set>
        <c:set select="$bolt" name="boltJava"><c:get select="$bolt/@name" />Bolt</c:set>
        <c:set select="$bolt" name="iBoltJava">I<c:get select="$bolt/@name" />Bolt</c:set>
        <c:set select="$bolt" name="isComponent">true</c:set>
        <c:set select="$bolt" name="componentKind">bolt</c:set>
        <c:set select="$bolt" name="gvLabel">"<c:get select="$bolt/@label"/> (<c:get select="$bolt/@instances"/>)"</c:set>

        *** Begin custom model updates for bolt (276)

        *** End custom model updates for bolt (276)


        <c:iterate select="$bolt/emits" var="emits">
            <c:set select="$emits" name="emitMethod">emitTo<c:get select="c:uppercaseFirst($emits/@stream)" /></c:set>
            <c:set select="$emits" name="emitVar"><c:get select="c:lowercaseFirst($emits/@type)" /></c:set>

            *** Begin custom model updates for emits (279)

			<c:if test="not($emits/@hide)" >
	            <c:set select="$emits" name="hide">false</c:set>
			</c:if>

            *** End custom model updates for emits (279)


            *** Begin custom model post updates for emits (279)

            *** End custom model post updates for emits (279)


        </c:iterate> 

        <c:iterate select="$bolt/reads" var="reads">
            <c:set select="$reads" name="execMethod">readFrom<c:get select="c:uppercaseFirst($reads/@stream)" /></c:set>
            <c:set select="$reads" name="type"><c:get select="$topology/*/emits[@stream=$reads/@stream]/@type" /></c:set>
            <c:set select="$reads" name="execVar"><c:get select="c:lowercaseFirst($reads/@type)" /></c:set>

            *** Begin custom model updates for reads (280)

			<c:if test="not($topology/*/emits[@stream=$reads/@stream]/@type)" >
				<c:log severity="error">Bolt <c:get select="$bolt/@label"/> reads from ill-defined stream <c:get select="$reads/@stream" /></c:log>
			</c:if>

			<c:if test="not($reads/@hide)" >
	            <c:set select="$reads" name="hide">false</c:set>
			</c:if>

			<c:if test="$reads/@grouping='custom'" >
	            <c:set select="$reads" name="customGrouping"><c:get select="c:uppercaseFirst($reads/@stream)" />From<c:get select="c:uppercaseFirst($bolt/@name)" />Grouping</c:set>
			</c:if>

            *** End custom model updates for reads (280)


            <c:iterate select="$reads/fieldRef" var="fieldRef">

                *** Begin custom model updates for fieldRef (282)

                *** End custom model updates for fieldRef (282)


                *** Begin custom model post updates for fieldRef (282)

                *** End custom model post updates for fieldRef (282)


            </c:iterate> 

            *** Begin custom model post updates for reads (280)

            *** End custom model post updates for reads (280)


        </c:iterate> 

        *** Begin custom model post updates for bolt (276)

        *** End custom model post updates for bolt (276)


    </c:iterate> 

    <c:iterate select="$topology/spout" var="spout">
        <c:set select="$spout" name="name"><c:get select="c:camelCase($spout/@label)" /></c:set>
        <c:set select="$spout" name="spoutTestJava"><c:get select="$spout/@name" />SpoutTest</c:set>
        <c:set select="$spout" name="iSpoutJava">I<c:get select="$spout/@name" />Spout</c:set>
        <c:set select="$spout" name="spoutJava"><c:get select="$spout/@name" />Spout</c:set>
        <c:set select="$spout" name="spoutLogicJava"><c:get select="$spout/@name" />SpoutLogic</c:set>
        <c:set select="$spout" name="isComponent">true</c:set>
        <c:set select="$spout" name="componentKind">spout</c:set>
        <c:set select="$spout" name="gvLabel">"<c:get select="$spout/@label"/> (<c:get select="$spout/@instances"/>)"</c:set>

        *** Begin custom model updates for spout (277)

        *** End custom model updates for spout (277)


        <c:iterate select="$spout/emits" var="emits">
            <c:set select="$emits" name="emitMethod">emitTo<c:get select="c:uppercaseFirst($emits/@stream)" /></c:set>
            <c:set select="$emits" name="emitVar"><c:get select="c:lowercaseFirst($emits/@type)" /></c:set>
            <c:if test="not($emits/@idType)">
                <c:set select="$emits" name="idType"><c:get select="$emits/@type" /></c:set>
            </c:if>

            *** Begin custom model updates for emits (283)

			<c:if test="not($emits/@hide)" >
	            <c:set select="$emits" name="hide">false</c:set>
			</c:if>
			
            *** End custom model updates for emits (283)


            *** Begin custom model post updates for emits (283)

            *** End custom model post updates for emits (283)


        </c:iterate> 

        *** Begin custom model post updates for spout (277)

        *** End custom model post updates for spout (277)


    </c:iterate> 

    <c:iterate select="$topology/type" var="type">
        <c:set select="$type" name="typeJava"><c:get select="$type/@name" /></c:set>
        <c:set select="$type" name="typeTestJava"><c:get select="$type/@name" />Test</c:set>
        <c:set select="$type" name="isComponent">false</c:set>

        *** Begin custom model updates for type (278)

		<c:setVariable select=" number(0) " var="index" />

        *** End custom model updates for type (278)


        <c:iterate select="$type/field" var="field">
            <c:set select="$field" name="var">_<c:get select="$field/@name" /></c:set>
            <c:set select="$field" name="getter">get<c:get select="c:uppercaseFirst($field/@name)" /></c:set>
            <c:set select="$field" name="setter">set<c:get select="c:uppercaseFirst($field/@name)" /></c:set>
            <c:set select="$field" name="adder">addTo<c:get select="c:uppercaseFirst($field/@name)" /></c:set>

            *** Begin custom model updates for field (284)

			<c:set select="$field" name="index"><c:get select="$index" /></c:set>
			<c:setVariable select=" number($index + 1) " var="index" />

			<c:if test="not($field/@list)" >
				<c:set select="$field" name="list">false</c:set>
			</c:if>
			
			<c:set select="$field" name="actualType"><c:get select="$field/@type" /></c:set>
			<c:set select="$field" name="kind">prim</c:set>
			<c:if test="$topology/type[@name=$field/@actualType]">
				<c:set select="$field" name="kind">bean</c:set>
            </c:if>
			<c:if test="$field/@list='true'" >
				<c:set select="$field" name="type">ArrayList<<c:get select="$field/@type" />></c:set>
				<c:set select="$field" name="kind"><c:get select="$field/@kind" />list</c:set>
			</c:if>

            *** End custom model updates for field (284)


            *** Begin custom model post updates for field (284)

            *** End custom model post updates for field (284)


        </c:iterate> 

        *** Begin custom model post updates for type (278)

        *** End custom model post updates for type (278)


    </c:iterate> 

    <c:iterate select="$topology/environment" var="environment">
        <c:set select="$environment" name="properties">dev</c:set>
        <c:set select="$environment" name="isComponent">false</c:set>

        *** Begin custom model updates for environment (281)

        *** End custom model updates for environment (281)


        *** Begin custom model post updates for environment (281)

        *** End custom model post updates for environment (281)


    </c:iterate> 

    *** Begin custom model post updates for topology (4)

    *** End custom model post updates for topology (4)

    <c:iterate select="$topology/other" var="other">
        <c:set select="$other" name="gvLabel">"<c:get select="$other/@kind"/>: <c:get select="$other/@id"/>"</c:set>

		<c:if test="$other/@style">
		    <c:if test="not($others/other[@kind=$other/@kind])">
		    	<c:copyElement select="$other" toSelect="$others"  name="other" />
		    </c:if>
		</c:if> 

    </c:iterate> 


</c:iterate> 

*** Begin custom model post updates for root (3)

*** End custom model post updates for root (3)



*******************************



*** Begin custom pre-generation actions for root (3)

*** End custom pre-generation actions for root (3)


*** Begin custom generation updates for root (3)

*** End custom generation updates for root (3)


<c:iterate select="$root/topology" var="topology">

    *** Begin custom pre-generation actions for topology (4)

    *** End custom pre-generation actions for topology (4)

    <c:project name="{$topology/@allProject}" />
    <c:project name="{$topology/@stormProject}" />
    < c:project name="{$topology/@monitorProject}" />
    <c:folder path="{$topology/@allProject}/src/main/java" />
    <c:folder path="{$topology/@allProject}/src/main/resources" />
    <c:folder path="{$topology/@allProject}/src/test/java" />
    <c:folder path="{$topology/@allProject}/src/test/resources" />
    <c:folder path="{$topology/@stormProject}/src/main/java" />
    <c:folder path="{$topology/@stormProject}/src/main/resources" />
    <c:folder path="{$topology/@stormProject}/src/test/java" />
    <c:folder path="{$topology/@stormProject}/src/test/resources" />
    <c:file path="{$topology/@allProject}/.classpath" template="templates/topology/allClasspath.prod" replace="false" />

    <c:file path="{$topology/@allProject}/.project" template="templates/topology/allProject.prod" replace="true" />

    <c:file path="{$topology/@allProject}/pom.xml" template="templates/topology/allPomXml.prod" replace="false" />

    <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@exceptionDir}/DataException.java" template="templates/topology/dataExceptionJava.prod" replace="false" />

    <c:file path="{$topology/@stormProject}/.classpath" template="templates/topology/stormClasspath.prod" replace="false" />

    <c:file path="{$topology/@stormProject}/.project" template="templates/topology/stormProject.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/.gitignore" template="templates/topology/stormGitIgnore.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/{$topology/@name}Topology" template="templates/topology/topologyGraphviz.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/gen_graphics.sh" template="templates/topology/genGraphicsSh.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/maven_run.sh" template="templates/topology/mavenRunSh.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/pom.xml" template="templates/topology/stormPomXml.prod" replace="false" />

    <c:file path="{$topology/@stormProject}/topology_run.sh" template="templates/topology/runSh.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@topologyDir}/{$topology/@topologyJava}.java" template="templates/topology/topologyJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@utilDir}/AlarmClock.java" template="templates/topology/alarmClockJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@utilDir}/{$topology/@iLoggerJava}.java" template="templates/topology/iLoggerJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@utilDir}/{$topology/@loggerJava}.java" template="templates/topology/loggerJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/main/resources/logging.properties" template="templates/topology/loggingProperties.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@mockDir}/MockedBoltOutputCollector.java" template="templates/topology/mockedboltoutputcollectorJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@mockDir}/MockedLocalCluster.java" template="templates/topology/mockedlocalclusterJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@mockDir}/MockedOutputFieldsDeclarer.java" template="templates/topology/mockedoutputfieldsdeclarerJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@mockDir}/MockedSpoutOutputCollector.java" template="templates/topology/mockedspoutoutputcollectorJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@mockDir}/MockedTuple.java" template="templates/topology/mockedtupleJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@utilDir}/Marshaller.java" template="templates/topology/marshallerJava.prod" replace="true" />

    <c:file path="{$topology/@stormProject}/{$topology/@name}TopologySummary" template="templates/topology/topologySummaryGraphviz.prod" replace="true" />

    < c:file path="{$topology/@monitorProject}/.project" template="templates/topology/monitorProject.prod" replace="true" />

    < c:file path="{$topology/@monitorProject}/StormMonitor.html" template="templates/topology/monitorHtml.prod" replace="false" />

    < c:copyFile target="{$topology/@monitorProject}/js/Chart.min.js" src="templates/topology/chartJs" replace="true" />

    < c:copyFile target="{$topology/@monitorProject}/js/jquery.min.js" src="templates/topology/jqueryJs" replace="true" />

    < c:copyFile target="{$topology/@monitorProject}/js/gerken.storm.monitor.js" src="templates/topology/monitorJs" replace="true" />

    <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@utilDir}/TimerUtil.java" template="templates/topology/timerUtilJava.prod" replace="true" />


    *** Begin custom generation updates for topology (4)

    <c:file path="{$topology/@allProject}/dump.xml" template="templates/dump.prod" replace="true" />

	<c:iterate select="c:unique( $topology/bolt/reads[@grouping='custom'] , '@customGrouping' )" var="reads" >
        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@logicDir}/{$reads/@customGrouping}.java" template="templates/stream/customGrouping.prod" replace="true" />
	</c:iterate>
	
    *** End custom generation updates for topology (4)


    <c:iterate select="$topology/bolt" var="bolt">

        *** Begin custom pre-generation actions for bolt (276)

        *** End custom pre-generation actions for bolt (276)

        <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@boltDir}/{$bolt/@boltTestJava}.java" template="templates/bolt/boltTestJava.prod" replace="true" />

        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@logicDir}/{$bolt/@boltLogicJava}.java" template="templates/bolt/boltLogicJava.prod" replace="true" />

        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@boltDir}/{$bolt/@boltJava}.java" template="templates/bolt/boltJava.prod" replace="true" />

        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@boltDir}/{$bolt/@iBoltJava}.java" template="templates/bolt/iBoltJava.prod" replace="true" />


        *** Begin custom generation updates for bolt (276)

        *** End custom generation updates for bolt (276)


        <c:iterate select="$bolt/emits" var="emits">

            *** Begin custom pre-generation actions for emits (279)

            *** End custom pre-generation actions for emits (279)


            *** Begin custom generation updates for emits (279)

            *** End custom generation updates for emits (279)

        </c:iterate> 

        <c:iterate select="$bolt/reads" var="reads">

            *** Begin custom pre-generation actions for reads (280)

            *** End custom pre-generation actions for reads (280)


            *** Begin custom generation updates for reads (280)

            *** End custom generation updates for reads (280)


            <c:iterate select="$reads/fieldRef" var="fieldRef">

                *** Begin custom pre-generation actions for fieldRef (282)

                *** End custom pre-generation actions for fieldRef (282)


                *** Begin custom generation updates for fieldRef (282)

                *** End custom generation updates for fieldRef (282)

            </c:iterate> 
        </c:iterate> 
    </c:iterate> 

    <c:iterate select="$topology/spout" var="spout">

        *** Begin custom pre-generation actions for spout (277)

        *** End custom pre-generation actions for spout (277)

        <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@spoutDir}/{$spout/@spoutTestJava}.java" template="templates/spout/spoutTestJava.prod" replace="true" />

        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@spoutDir}/{$spout/@iSpoutJava}.java" template="templates/spout/iSpoutJava.prod" replace="true" />

        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@spoutDir}/{$spout/@spoutJava}.java" template="templates/spout/spoutJava.prod" replace="true" />

        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@logicDir}/{$spout/@spoutLogicJava}.java" template="templates/spout/spoutLogicJava.prod" replace="true" />


        *** Begin custom generation updates for spout (277)

        *** End custom generation updates for spout (277)


        <c:iterate select="$spout/emits" var="emits">

            *** Begin custom pre-generation actions for emits (283)

            *** End custom pre-generation actions for emits (283)


            *** Begin custom generation updates for emits (283)

            *** End custom generation updates for emits (283)

        </c:iterate> 
    </c:iterate> 

    <c:iterate select="$topology/type" var="type">

        *** Begin custom pre-generation actions for type (278)

        *** End custom pre-generation actions for type (278)

        <c:file path="{$topology/@stormProject}/src/main/java/{$topology/@beanDir}/{$type/@typeJava}.java" template="templates/type/typeJava.prod" replace="true" />

        <c:file path="{$topology/@stormProject}/src/test/java/{$topology/@beanDir}/{$type/@typeTestJava}.java" template="templates/type/typeTestJava.prod" replace="true" />


        *** Begin custom generation updates for type (278)

        *** End custom generation updates for type (278)


        <c:iterate select="$type/field" var="field">

            *** Begin custom pre-generation actions for field (284)

            *** End custom pre-generation actions for field (284)


            *** Begin custom generation updates for field (284)

            *** End custom generation updates for field (284)

        </c:iterate> 
    </c:iterate> 

    <c:iterate select="$topology/environment" var="environment">

        *** Begin custom pre-generation actions for environment (281)

        *** End custom pre-generation actions for environment (281)

        <c:file path="{$topology/@stormProject}/src/main/resources/{$environment/@name}.properties" template="templates/environment/properties.prod" replace="true" />


        *** Begin custom generation updates for environment (281)

        *** End custom generation updates for environment (281)

    </c:iterate> 



</c:iterate> 

*******************************
